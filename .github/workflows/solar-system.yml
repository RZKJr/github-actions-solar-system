---
  name: Solar System Workflow
  on:
    workflow_dispatch: null
    push:
      branches:
        - main
        - feature/*
  env:
    MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
    MONGO_USERNAME: superuser
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  jobs:
    unit-testing:
      name: Unit Testing
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Install Dependencies
          run: npm install

        - name: Unit Testing
          run: npm test

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage: 
      name: code-coverage
      runs-on: ubuntu-latest
      steps:
        - name: checkout 
          uses: actions/checkout@v4

        - name: Setup Node.js version 18
          uses: actions/setup-node@v4
          with:
            node-version: 18 

        - name: Cache NPM dependencies
          uses: actions/cache@v4

          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

        - name: installing node dependencies 
          run: npm install 
          
        - name: run code coverage bullshit 
          
          continue-on-error: true
          run: npm run coverage

        - name: upload all that garbage
          uses: actions/upload-artifact@v4
          if: always()
          with: 
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
    docker:
       name: docker
       runs-on: ubuntu-latest
       needs: [unit-testing, code-coverage]
       steps:
         - name: checkout 
           uses: actions/checkout@v4

         - name: docker login 
           uses: docker/login-action@v3
           with:
            registry: ghcr.io
            username: ${{ github.repository_owner_id }}
            password: ${{ secrets.GITHUB_TOKEN }} 

         - name: Build and push
           uses: docker/build-push-action@v6
           with:
            push: true
            tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
    dev-deploy:
      name: dev-deploy
      runs-on: ubuntu-latest
      needs: docker
      environment: development
      steps:
        - name: checkout action 
          uses: actions/checkout@v4

        - name: azure setup kubectl 
          uses: azure/setup-kubectl@v4
          with:
           version: 'v1.26.0'

        - name: azure set context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ vars.KUBECONFIG }}
            
        - name: run kubectl 
          run: kubectl version --short -o yaml